{"version":3,"file":"static/js/917.3aab75cb.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/Filter/Filter.jsx","components/List/List.jsx","components/Modal/modal.styled.js","components/Modal/ModalEdit.jsx","pages/Contacts/Contacts.jsx","../node_modules/@mui/icons-material/ContactPhone.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { addContact } from 'redax/operation';\nimport { selectFilteredContacts } from 'redax/selectors';\n\nconst FormContact = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectFilteredContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const {\n      elements: { name, number },\n    } = e.target;\n    const nameUser = items.find(\n      item => item.name === name.value ?? item.number === number.value\n    );\n    if (nameUser) {\n      return alert(`${nameUser.name} alredy have`);\n    }\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </div>\n        <button type=\"submit\">Add Contact</button>\n      </form>\n      <Outlet />\n    </div>\n  );\n};\n\nFormContact.propTypes = {\n  lable: PropTypes.string,\n};\n\nexport default FormContact;\n","import { selectStatusFilter } from 'redax/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redax/filterSlise';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const contactsFilter = useSelector(selectStatusFilter);\n\n  const handleFilter = e => {\n    const search = e.target.value;\n    dispatch(filterContacts(search));\n  };\n  return (\n    <label\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      Find contact by name\n      <input\n        style={{\n          width: '200px',\n          marginTop: '5px',\n        }}\n        type=\"text\"\n        name=\"filter\"\n        value={contactsFilter}\n        onChange={handleFilter}\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { removeContact, fetchContacts } from 'redax/operation';\nimport { editContact } from 'redax/modalSlice';\nimport { selectFilteredContacts, selectModalContact } from 'redax/selectors';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nconst ListContacts = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectFilteredContacts);\n  const modalDataContact = useSelector(selectModalContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, modalDataContact]);\n\n  const deleteContact = id => {\n    return dispatch(removeContact(id));\n  };\n\n  const editContactData = id => {\n    const dataContact = items.find(item => item.id === id);\n    dispatch(editContact(dataContact));\n  };\n\n  const user = items.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        <ContactPhoneIcon color=\"primary\" />\n        {name}: {number}\n        <button type=\"button\" onClick={() => editContactData(id)}>\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => deleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <h2>Contacts</h2>\n      <ul>{user}</ul>\n    </>\n  );\n};\n\nexport default ListContacts;\n\nListContacts.propTypes = {\n  arrayContacts: PropTypes.array,\n  button: PropTypes.element,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Overlay = styled.div`\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.3);\n    top: 0;\n    left: 0;\n`;\n\nexport const FormModal = styled.form`\n    position: absolute;\n    top: 200px;\n    left: 200px;\n    padding: 20px;\n    background-color: pink;\n    border-radius: 10px;\n    box-shadow: inset 0 -3em 3em rgba(0,0,0,0.1),\n             0.3em 0.3em 1em rgba(0,0,0,0.3);\n`\n\nexport const InputForm = styled.input`\n    border-radius: 5px;\n    border-color: rgba(150, 150, 150, 0.7);\n    background-color: rgba(200, 200, 200, 0.3);  \n`","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectModalContact } from 'redax/selectors';\nimport { editContact } from 'redax/modalSlice';\nimport { patchContact } from 'redax/operation';\nimport { Overlay, FormModal, InputForm } from './modal.styled';\n\nexport const ModalEdit = () => {\n  const overlay = document.getElementById('popup-root');\n  const dispatch = useDispatch();\n  const modalDataContact = useSelector(selectModalContact);\n\n  useEffect(() => {\n    window.addEventListener('keydown', onCloseEscape);\n\n    return () => {\n      window.removeEventListener('keydown', onCloseEscape);\n    };\n  });\n\n  const closeModal = () => {\n    dispatch(editContact(null));\n  };\n\n  const onCloseEscape = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const onCloseClickBackdrop = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    const form = e.target;\n    // const {\n    //   elements: { name, number },\n    // } = e.target;\n    dispatch(patchContact(modalDataContact.id), {\n      name: modalDataContact.name,\n      number: modalDataContact.number,\n    });\n    closeModal();\n    form.reset();\n  };\n\n  return createPortal(\n    <Overlay onClick={onCloseClickBackdrop}>\n      <FormModal onSubmit={handleEdit}>\n        <div\n          style={{\n            marginBottom: '10px',\n          }}\n        >\n          <label\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            Name\n            <InputForm\n              style={{\n                width: '200px',\n                marginTop: '5px',\n              }}\n              type=\"text\"\n              name=\"name\"\n              onChange={e =>\n                dispatch(\n                  editContact({\n                    id: modalDataContact.id,\n                    name: e.target.value,\n                    number: modalDataContact.number,\n                  })\n                )\n              }\n              value={modalDataContact.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n        </div>\n        <div style={{ marginBottom: '10px' }}>\n          <label\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            Number\n            <InputForm\n              style={{\n                width: '200px',\n                marginTop: '5px',\n              }}\n              type=\"tel\"\n              name=\"number\"\n              onChange={e =>\n                dispatch(\n                  editContact({\n                    id: modalDataContact.id,\n                    name: modalDataContact.name,\n                    number: e.target.value,\n                  })\n                )\n              }\n              value={modalDataContact.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n        </div>\n        <button type=\"submit\" style={{ marginBottom: '10px' }}>\n          Edit Contact\n        </button>\n      </FormModal>\n    </Overlay>,\n    overlay\n  );\n};\n","import FormContact from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport ListContacts from 'components/List/List';\nimport { useSelector } from 'react-redux';\nimport { selectModalOpen, selectModalContact } from 'redax/selectors';\nimport { ModalEdit } from 'components/Modal/ModalEdit';\n\nconst Contacts = () => {\n  const closeModal = useSelector(selectModalOpen);\n  const openModal = useSelector(selectModalContact);\n\n  return (\n    <>\n      <FormContact />\n      <Filter />\n      <ListContacts />\n      {openModal ? <ModalEdit /> : closeModal}\n    </>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M22 3H2C.9 3 0 3.9 0 5v14c0 1.1.9 2 2 2h20c1.1 0 1.99-.9 1.99-2L24 5c0-1.1-.9-2-2-2zM8 6c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H2v-1c0-2 4-3.1 6-3.1s6 1.1 6 3.1v1zm3.85-4h1.64L21 16l-1.99 1.99c-1.31-.98-2.28-2.38-2.73-3.99-.18-.64-.28-1.31-.28-2s.1-1.36.28-2c.45-1.62 1.42-3.01 2.73-3.99L21 8l-1.51 2h-1.64c-.22.63-.35 1.3-.35 2s.13 1.37.35 2z\"\n}), 'ContactPhone');\n\nexports.default = _default;"],"names":["dispatch","useDispatch","items","useSelector","selectFilteredContacts","onSubmit","e","preventDefault","form","target","elements","name","number","nameUser","find","item","value","alert","addContact","reset","type","pattern","title","required","contactsFilter","selectStatusFilter","style","display","flexDirection","width","marginTop","onChange","search","filterContacts","modalDataContact","selectModalContact","useEffect","fetchContacts","user","map","id","ContactPhone","color","onClick","dataContact","editContact","editContactData","removeContact","deleteContact","Overlay","styled","FormModal","InputForm","ModalEdit","overlay","document","getElementById","window","addEventListener","onCloseEscape","removeEventListener","closeModal","code","createPortal","currentTarget","patchContact","marginBottom","selectModalOpen","openModal","Form","List","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}